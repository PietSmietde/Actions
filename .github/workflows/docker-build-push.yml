on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: Environment
      repositoryPrefix:
        required: true
        type: string
        description: Container repository prefix
      repositoryTarget:
        required: true
        type: string
        description: Repository target name like 'frontend', 'cli'. Dockerfile must be presend in named subfolder

jobs:
  build:
    name: "Build ${{ inputs.target }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta (production)
        if: ${{ inputs.environment == 'production' }}
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repositoryPrefix }}/${{ matrix.repositoryTarget }}
          github-token: ${{ github.token }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Docker meta (non-production)
        if: ${{ inputs.environment != 'production' }}
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repositoryPrefix }}/${{ matrix.repositoryTarget }}
          github-token: ${{ github.token }}
          tags: |
            type=sha,prefix=dev-
            type=ref,event=pr,prefix=pr-

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}
          username: ${{ secrets.AWS_ACCESS_KEY }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          context: .
          file: ".docker/${{ matrix.repositoryTarget }}/Dockerfile"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            NOVA_USERNAME=${{ secrets.NOVA_USERNAME }}
            NOVA_PASSWORD=${{ secrets.NOVA_PASSWORD }}

      - name: Send Slack notification
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: bot-github
          status: SUCCESS
          color: good
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

name: Docker build & push

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: Environment
      repository:
        required: true
        type: string
        description: Full repository name
      dockerfile:
        required: false
        type: string
        description: Path to Dockerfile
      sha-prefix:
        required: false
        type: string
        description: The commit SHA hash prefix if action is not dispatched by tag (default 'dev-')
    secrets:
      docker-build-args:
        required: false
        description: Build-Args for Docker build
      aws-region:
        required: true
        description: AWS region
      aws-access-key:
        required: true
        description: AWS access key
      aws-secret-access-key:
        required: true
        description: AWS secret access key
    outputs:
      version:
        description: The detected version
        value: ${{ jobs.build.outputs.version }}

jobs:
  build:
    name: "Publish to Docker"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Generate version string
        id: version
        # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
        run: |
          if [ '${{ github.ref_type }}' == 'tag' ]
          then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ inputs.sha-prefix || 'dev-' }}-$(git rev-parse --short=7 ${{ github.sha }})" >> $GITHUB_OUTPUT
          fi

      - name: Create version file
        run: |
          echo "${{ steps.version.outputs.version }}" > version.txt
          echo "module.exports = '${{ steps.version.outputs.version }}';" > version.js

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ secrets.aws-region }}

      - name: Login to ECR via AWS CLI
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}
          github-token: ${{ github.token }}
          tags: |
            type=semver,enable=${{ (inputs.environment == 'production' && 'true') || 'false' }},value=${{ steps.version.outputs.version }},pattern={{version}}
            type=semver,enable=${{ (inputs.environment == 'production' && 'true') || 'false' }},value=${{ steps.version.outputs.version }},pattern={{major}}.{{minor}}
            type=raw,enable=${{ (inputs.environment == 'production' && 'true') || 'false' }},value=latest
            type=sha,enable=${{ (inputs.environment != 'production' && 'true') || 'false' }},prefix=${{ inputs.sha-prefix || 'dev-' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ECR via Docker
        uses: docker/login-action@v1
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}
          username: ${{ secrets.aws-access-key }}
          password: ${{ secrets.aws-secret-access-key }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ${{ secrets.docker-build-args }}
            VERSION=${{ steps.version.outputs.version }}
            SENTRY_RELEASE=${{ steps.version.outputs.version }}

name: Docker build & push

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: Environment
      repository-prefix:
        required: true
        type: string
        description: Container repository prefix
      repository-target:
        required: true
        type: string
        description: Repository target name like 'frontend', 'cli'. Dockerfile must be presend in named subfolder
      version:
        required: false
        type: string
        description: Semver version for docker
    secrets:
      docker-build-args:
        required: false
        description: Build-Args for Docker build
      aws-region:
        required: true
        description: AWS region
      aws-access-key:
        required: true
        description: AWS access key
      aws-secret-access-key:
        required: true
        description: AWS secret access key

jobs:
  build:
    name: "Docker build & push"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create version file
        if: ${{ inputs.version }}
        run: echo "${{ inputs.version }}" > version.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ secrets.aws-region }}

      - name: Login to ECR via AWS CLI
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository-prefix }}/${{ inputs.repository-target }}
          github-token: ${{ github.token }}
          tags: |
            type=semver,enable=${{ (inputs.environment == 'production' && 'true') || 'false' }},pattern={{version}}
            type=semver,enable=${{ (inputs.environment == 'production' && 'true') || 'false' }},pattern={{major}}.{{minor}}
            type=sha,enable=${{ (inputs.environment != 'production' && 'true') || 'false' }},prefix=dev-
            type=ref,enable=${{ (inputs.environment != 'production' && 'true') || 'false' }},event=pr,prefix=pr-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ECR via Docker
        uses: docker/login-action@v1
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}
          username: ${{ secrets.aws-access-key }}
          password: ${{ secrets.aws-secret-access-key }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ".docker/${{ inputs.repository-target }}/Dockerfile"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: ${{ secrets.docker-build-args }}
